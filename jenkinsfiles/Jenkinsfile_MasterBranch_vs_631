#!groovy
@Library(['com.adobe.qe.evergreen.sprout@develop'])
import com.adobe.qe.evergreen.sprout.Sprout
import com.adobe.qe.evergreen.sprout.Pipeline
import com.adobe.qe.evergreen.sprout.SproutConfig
import com.adobe.qe.evergreen.sprout.criteria.*
import com.adobe.qe.evergreen.sprout.model.*
import com.adobe.qe.evergreen.sprout.command.*

String MINION_HUB_URL = 'http://qa-bsl-minion-hub.corp.adobe.com:8811'

TEST_GROUP_1 =  "aem.core-components.testsuite.formhidden," +
        "aem.core-components.testsuite.formoptions," +
        "aem.core-components.testsuite.formcomponents," +
        "aem.core-components.testsuite.breadcrumb," +
        "aem.core-components.testsuite.teaser"

TEST_GROUP_2 =  "aem.core-components.testsuite.formtext," +
        "aem.core-components.testsuite.languagenavigation," +
        "aem.core-components.testsuite.text," +
        "aem.core-components.testsuite.formbutton"

TEST_GROUP_3 =  "aem.core-components.testsuite.image," +
        "aem.core-components.testsuite.list," +
        "aem.core-components.testsuite.formcontainer"

TEST_GROUP_4 =  "aem.core-components.testsuite.navigation," +
        "aem.core-components.testsuite.page," +
        "aem.core-components.testsuite.search"

SproutConfig config = new SproutConfig()

// points to master branch of repo
config.setAdditionalRepositories([
        [url: 'git@git.corp.adobe.com:CQ/aem-core-wcm-components.git', branch: 'issue/CQ-4229930_master', folder: 'master', vcs: 'git']
])

/* --------------------------------------------------------------------- */
/*                                MODULES                               */
/* --------------------------------------------------------------------- */
Module componentsAll = new Module.Builder('master/all')
        .withArtifact('zip', 'master/all/target/core.wcm.components.all-*.zip', true)
        .build()
Module componentsContent = new Module.Builder('master/content')
        .withArtifact('zip', 'master/content/target/core.wcm.components.content-*.zip', true)
        .withConsumer(componentsAll)
        .build()
Module componentsCore = new Module.Builder('master/bundles/core')
        .withUnitTests(true)
        .withCoverage(false)
        .withArtifact('jar', 'master/bundles/core/target/core.wcm.components.core-*.jar', true)
        .withConsumer(componentsAll)
        .withConsumer(componentsContent)
        .build()
Module componentsConfig = new Module.Builder('master/config')
        .withArtifact('zip', 'master/config/target/core.wcm.components.config-*.zip', true)
        .withConsumer(componentsAll)
        .build()
Module componentsItUi = new Module.Builder('master/testing/it/ui-js')
        .withArtifact('zip', 'master/testing/it/ui-js/target/core.wcm.components.it.ui-js-*.zip', true)
        .build()
Module componentsJUnitCore = new Module.Builder('master/testing/junit/core')
        .withArtifact('jar', 'master/testing/junit/core/target/core.wcm.components.junit.core-*.jar', true)
        .withConsumer(componentsCore)
        .build()
Module componentsParent = new Module.Builder('master/parent')
        .withConsumer(componentsAll)
        .withConsumer(componentsConfig)
        .withConsumer(componentsContent)
        .withConsumer(componentsCore)
        .withConsumer(componentsItUi)
        .withConsumer(componentsJUnitCore)
        .withBuild()
        .build()

/* --------------------------------------------------------------------- */
/*                        EXTERNAL DEPENDENCIES                          */
/* --------------------------------------------------------------------- */
MavenDependency hobbesRewriterPackage = new MavenDependency.Builder()
        .withGroupId("com.adobe.granite")
        .withArtifactId("com.adobe.granite.testing.hobbes.rewriter")
        .withVersion("latest")
        .withExtension("jar")
        .build()

MavenDependency hobbesTesting = new MavenDependency.Builder()
        .withGroupId("com.adobe.granite")
        .withArtifactId("com.adobe.granite.testing.hobbes.content")
        .withVersion("latest")
        .withExtension("zip").build()

MavenDependency uiTestingCommonsPackage = new MavenDependency.Builder()
        .withGroupId("com.adobe.qe")
        .withArtifactId("com.adobe.qe.ui-testing-commons")
        .withVersion("latest")
        .withExtension("zip")
        .build()

MavenDependency servicePack1 = new MavenDependency.Builder()
        .withGroupId("com.adobe.cq")
        .withArtifactId("aem-service-pkg")
        .withVersion("6.3.1")
        .withExtension("zip")
        .build()

MavenDependency fp20593 = new MavenDependency.Builder()
        .withGroupId("com.adobe.cq.feature")
        .withArtifactId("cq-6.3.0-featurepack-20593")
        .withVersion("1.2")
        .withExtension("zip").build()


/* --------------------------------------------------------------------- */
/*                       QUICKSTART CONFIGURATIONS                        */
/* --------------------------------------------------------------------- */
Quickstart qs631 = new QPQuickstart.Builder('Quickstart 6.3 SP1')
        .withVersion('6.3.0')
        .build()

/* --------------------------------------------------------------------- */
/*                      CQ INSTANCE CONFIGURATIONS                        */
/* --------------------------------------------------------------------- */
CQInstance author631 = new CQInstance.Builder()
        .withQuickstart(qs631)
        .withId('author631')
        .withPort(1234)
        .withRunmode("author")
        .withRunmode("nosamplecontent")
        .withContextPath("/cp")
        .withMavenDependency(hobbesRewriterPackage)
        .withMavenDependency(uiTestingCommonsPackage)
        .withMavenDependency(hobbesTesting)
        .withMavenDependency(servicePack1)
        .withMavenDependency(fp20593)
        .withFileDependency(componentsItUi.getArtifact('zip'))
        .withFileDependency(componentsCore.getArtifact('jar'))
        .withFileDependency(componentsContent.getArtifact('zip'))
        .withFileDependency(componentsConfig.getArtifact('zip'))
        .build()

/* --------------------------------------------------------------------- */
/*                                UI TESTS                               */
/* --------------------------------------------------------------------- */

// Run tests against chrome
UITestRun coreCompUIChromePart1_631 = new UITestRun.Builder()
        .withName('Group 1 / Chrome')
        .withInstance(author631)
        .withBrowser('CHROME')
        .withHobbesHubUrl(MINION_HUB_URL)
        .withRunInstructions('main/jenkinsfiles/UITestRunOptions63.json')
        .withWaitForMinionMinutes(10)
        .withFilter(TEST_GROUP_1)
        .build()

UITestRun coreCompUIChromePart2_631 = new UITestRun.Builder()
        .withName('Group 2 / Chrome')
        .withInstance(author631)
        .withBrowser('CHROME')
        .withHobbesHubUrl(MINION_HUB_URL)
        .withRunInstructions('main/jenkinsfiles/UITestRunOptions63.json')
        .withWaitForMinionMinutes(10)
        .withFilter(TEST_GROUP_2)
        .build()

UITestRun coreCompUIChromePart3_631 = new UITestRun.Builder()
        .withName('Group 3 / Chrome')
        .withInstance(author631)
        .withBrowser('CHROME')
        .withHobbesHubUrl(MINION_HUB_URL)
        .withRunInstructions('main/jenkinsfiles/UITestRunOptions63.json')
        .withWaitForMinionMinutes(10)
        .withFilter(TEST_GROUP_3)
        .build()

UITestRun coreCompUIChromePart4_631 = new UITestRun.Builder()
        .withName('Group 4 / Chrome')
        .withInstance(author631)
        .withBrowser('CHROME')
        .withHobbesHubUrl(MINION_HUB_URL)
        .withRunInstructions('main/jenkinsfiles/UITestRunOptions63.json')
        .withWaitForMinionMinutes(10)
        .withFilter(TEST_GROUP_4)
        .build()
/* --------------------------------------------------------------------- */
/*                       SPROUT CONFIGURATION                            */
/* --------------------------------------------------------------------- */

// calculate code coverage
config.setComputeCoverage(false)
config.setComputeReleaseCoverage(false)

// Report Sprout stats to elasticsearch
config.getElasticsearchReporting().setEnable(false)

// the modules to build
config.setModules([componentsCore, componentsContent, componentsConfig, componentsAll, componentsItUi,
                   componentsJUnitCore,componentsParent])

// the tests to execute
config.setTestRuns([coreCompUIChromePart1_631,coreCompUIChromePart2_631,coreCompUIChromePart3_631,coreCompUIChromePart4_631])

config.setGithubAccessTokenId('bf3be1a6-ad0a-43d9-86e2-93b30279060f')

config.setEnableMailNotification(false)

// Slack notification
config.setEnableSlackNotifications(true)
config.setSlackChannel('#refsquad-sprouts')
config.setSlackTeamDomain('cq-dev')
config.setSlackIntegrationToken('TPhlDoZqT0DvKyVC1RnCvzfj')

/* --------------------------------------------------------------------- */
/*                       SPROUT CUSTOMIZATION                            */
/* --------------------------------------------------------------------- */
Pipeline sprout = new Sprout.Builder()
        .withConfig(config)
        .withJenkins(this).build()

sprout.execute()
